
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by Tools.MacroExpansion, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepEngine                                          
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using Lockstep.Serialization;                                                                    
using System.Runtime.InteropServices;                                                            
using System.Runtime.CompilerServices;                                                            
using System;                                                                                    
using Lockstep.InternalUnsafeECS;                                                               
using System.Collections;                                                                        
using Lockstep.Math;                                                                             
using System.Collections.Generic;                                                                
using Lockstep.Logging;                                                                          
using Lockstep.Util;                                                                          
namespace Lockstep.UnsafeECS.Game { 

    public enum EEntityType : int {
        None,
        BoidSpawner,
        BoidCell,
        Boid,
        BoidTarget,
        BoidObstacle, 
        EnumCount,
    }

    public static class EntityIds {
      	public const int BoidSpawner = (int)(EEntityType.BoidSpawner);
      	public const int BoidCell = (int)(EEntityType.BoidCell);
      	public const int Boid = (int)(EEntityType.Boid);
      	public const int BoidTarget = (int)(EEntityType.BoidTarget);
      	public const int BoidObstacle = (int)(EEntityType.BoidObstacle); 
      	public const int TotalEntityTypeCount = ((int)(EEntityType.EnumCount) -1);
    }

    public enum EComponentType : int {
        None,
        Animator,
        CollisionAgent,
        NavMeshAgent,
        Prefab,
        Transform2D,
        Transform3D,
        BoidSpawnerTag,
        BoidTag,
        BoidObstacleTag,
        BoidTargetTag,
        TargetMoveInfo,
        BoidState,
        ViewData,
        SpawnData,
        AssetData,
        CellIndexData,
        ScaleData,
        PlayerData,
        SkillData,
        MoveData,
        CellData, 
        EnumCount
    }

    public class CompoenntIds {
      public const int Animator = (int)(EComponentType.Animator);
      public const int CollisionAgent = (int)(EComponentType.CollisionAgent);
      public const int NavMeshAgent = (int)(EComponentType.NavMeshAgent);
      public const int Prefab = (int)(EComponentType.Prefab);
      public const int Transform2D = (int)(EComponentType.Transform2D);
      public const int Transform3D = (int)(EComponentType.Transform3D);
      public const int BoidSpawnerTag = (int)(EComponentType.BoidSpawnerTag);
      public const int BoidTag = (int)(EComponentType.BoidTag);
      public const int BoidObstacleTag = (int)(EComponentType.BoidObstacleTag);
      public const int BoidTargetTag = (int)(EComponentType.BoidTargetTag);
      public const int TargetMoveInfo = (int)(EComponentType.TargetMoveInfo);
      public const int BoidState = (int)(EComponentType.BoidState);
      public const int ViewData = (int)(EComponentType.ViewData);
      public const int SpawnData = (int)(EComponentType.SpawnData);
      public const int AssetData = (int)(EComponentType.AssetData);
      public const int CellIndexData = (int)(EComponentType.CellIndexData);
      public const int ScaleData = (int)(EComponentType.ScaleData);
      public const int PlayerData = (int)(EComponentType.PlayerData);
      public const int SkillData = (int)(EComponentType.SkillData);
      public const int MoveData = (int)(EComponentType.MoveData);
      public const int CellData = (int)(EComponentType.CellData); 
      public const int TotalComponentTypeCount = ((int)(EComponentType.EnumCount) -1);
    }



    public enum ECampType : int {
        Player = 0,
        Enemy = 1,
        Other = 2, 
    }
    public enum EItemType : int {
        AddLife = 0,
        Boom = 1,
        Upgrade = 2,
        EnumCount = 3, 
    }
    public enum EDir : int {
        Up = 0,
        Left = 1,
        Down = 2,
        Right = 3,
        EnumCount = 4, 
    } 


    public enum E_EntityOfAnimator{

    }
    public enum E_EntityOfCollisionAgent{

    }
    public enum E_EntityOfNavMeshAgent{

    }
    public enum E_EntityOfPrefab{
        BoidSpawner,
        Boid,
        BoidTarget,
        BoidObstacle,
    }
    public enum E_EntityOfTransform2D{

    }
    public enum E_EntityOfTransform3D{
        BoidSpawner,
        Boid,
        BoidTarget,
        BoidObstacle,
    }
    public enum E_EntityOfBoidSpawnerTag{
        BoidSpawner,
    }
    public enum E_EntityOfBoidTag{
        Boid,
    }
    public enum E_EntityOfBoidObstacleTag{
        BoidObstacle,
    }
    public enum E_EntityOfBoidTargetTag{
        BoidTarget,
    }
    public enum E_EntityOfTargetMoveInfo{
        BoidTarget,
    }
    public enum E_EntityOfBoidState{
        Boid,
    }
    public enum E_EntityOfViewData{

    }
    public enum E_EntityOfSpawnData{
        BoidSpawner,
    }
    public enum E_EntityOfAssetData{
        BoidSpawner,
    }
    public enum E_EntityOfCellIndexData{

    }
    public enum E_EntityOfScaleData{

    }
    public enum E_EntityOfPlayerData{
        BoidObstacle,
    }
    public enum E_EntityOfSkillData{
        BoidObstacle,
    }
    public enum E_EntityOfMoveData{
        BoidObstacle,
    }
    public enum E_EntityOfCellData{
        BoidCell,
    }
    public enum E_FieldOfAnimator{
        Pad,
    }
    public enum E_FieldOfCollisionAgent{
        Collider,
        IsTrigger,
        Layer,
        IsEnable,
        IsSleep,
        Mass,
        AngularSpeed,
        Speed,
    }
    public enum E_FieldOfNavMeshAgent{
        Pad,
    }
    public enum E_FieldOfPrefab{
        AssetId,
    }
    public enum E_FieldOfTransform2D{
        Position,
        Deg,
        Scale,
    }
    public enum E_FieldOfTransform3D{
        Position,
        Forward,
        Scale,
    }
    public enum E_FieldOfBoidSpawnerTag{
        Pad,
    }
    public enum E_FieldOfBoidTag{
        Pad,
    }
    public enum E_FieldOfBoidObstacleTag{
        Pad,
    }
    public enum E_FieldOfBoidTargetTag{
        Pad,
    }
    public enum E_FieldOfTargetMoveInfo{
        InitPos,
        Interval,
        Radius,
        InitDeg,
    }
    public enum E_FieldOfBoidState{
        SinkTimer,
        IsDied,
        IsScored,
        Killer,
    }
    public enum E_FieldOfViewData{
        ViewId,
    }
    public enum E_FieldOfSpawnData{
        Count,
        Radius,
        Position,
    }
    public enum E_FieldOfAssetData{
        AssetId,
    }
    public enum E_FieldOfCellIndexData{
        Index,
    }
    public enum E_FieldOfScaleData{
        Value,
    }
    public enum E_FieldOfPlayerData{
        Score,
        LocalId,
    }
    public enum E_FieldOfSkillData{
        IsNeedFire,
        IsFiring,
        CD,
        CdTimer,
        Duration,
        DurationTimer,
        AtkRange,
    }
    public enum E_FieldOfMoveData{
        MoveSpd,
        AcceleratedSpd,
        CurSpd,
        AngularSpd,
        DeltaDeg,
    }
    public enum E_FieldOfCellData{
        Count,
        Alignment,
        Separation,
        ObstacleDistance,
        ObstaclePositionIndex,
        TargetPositionIndex,
        Index,
    }
}                                                                                
                                                                                         