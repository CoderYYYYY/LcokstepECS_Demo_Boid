
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by Tools.MacroExpansion, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepEngine                                          
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using Lockstep.Serialization;                                                                    
using System.Runtime.InteropServices;                                                            
using System.Runtime.CompilerServices;                                                            
using System;                                                                                    
using Lockstep.InternalUnsafeECS;                                                               
using System.Collections;                                                                        
using Lockstep.Math;                                                                             
using System.Collections.Generic;                                                                
using Lockstep.Logging;                                                                          
using Lockstep.Util;                                                                          
namespace Lockstep.UnsafeECS.Game {                                                              
#if !DONT_USE_GENERATE_CODE                                                                      

    public unsafe partial struct EntityUtil {
        public static Animator* GetAnimator(Entity* entity){
            switch (entity->_ref._type) {
                case EntityIds.Item:
                    return &((Item*) entity)->Animator;
                case EntityIds.Camp:
                    return &((Camp*) entity)->Animator;
 
            }
            return null;
        }
        public static CollisionAgent* GetCollisionAgent(Entity* entity){
            switch (entity->_ref._type) {
 
            }
            return null;
        }
        public static NavMeshAgent* GetNavMeshAgent(Entity* entity){
            switch (entity->_ref._type) {
 
            }
            return null;
        }
        public static Prefab* GetPrefab(Entity* entity){
            switch (entity->_ref._type) {
 
            }
            return null;
        }
        public static Transform2D* GetTransform2D(Entity* entity){
            switch (entity->_ref._type) {
                case EntityIds.Player:
                    return &((Player*) entity)->Transform2D;
                case EntityIds.Enemy:
                    return &((Enemy*) entity)->Transform2D;
                case EntityIds.Bullet:
                    return &((Bullet*) entity)->Transform2D;
 
            }
            return null;
        }
 

        public static BoidSpawner* CastToBoidSpawner(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.BoidSpawner) {
                return (BoidSpawner*) entity;
            }
            return null;
        }
        public static BoidCell* CastToBoidCell(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.BoidCell) {
                return (BoidCell*) entity;
            }
            return null;
        }
        public static Boid* CastToBoid(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.Boid) {
                return (Boid*) entity;
            }
            return null;
        }
        public static BoidTarget* CastToBoidTarget(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.BoidTarget) {
                return (BoidTarget*) entity;
            }
            return null;
        }
        public static BoidObstacle* CastToBoidObstacle(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.BoidObstacle) {
                return (BoidObstacle*) entity;
            }
            return null;
        }
        public static Item* CastToItem(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.Item) {
                return (Item*) entity;
            }
            return null;
        }
        public static Camp* CastToCamp(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.Camp) {
                return (Camp*) entity;
            }
            return null;
        }
        public static Player* CastToPlayer(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.Player) {
                return (Player*) entity;
            }
            return null;
        }
        public static Enemy* CastToEnemy(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.Enemy) {
                return (Enemy*) entity;
            }
            return null;
        }
        public static Bullet* CastToBullet(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.Bullet) {
                return (Bullet*) entity;
            }
            return null;
        }
        public static Spawner* CastToSpawner(Entity* entity){
            if (entity != null && entity->_ref._type == EntityIds.Spawner) {
                return (Spawner*) entity;
            }
            return null;
        }
 
        public static object ToBoxedStruct(Entity* entity){
            if (entity == null) {
                return null;
            }
            switch (entity->_ref._type) {
                case EntityIds.BoidSpawner: return (object) (*((BoidSpawner*) entity));
                case EntityIds.BoidCell: return (object) (*((BoidCell*) entity));
                case EntityIds.Boid: return (object) (*((Boid*) entity));
                case EntityIds.BoidTarget: return (object) (*((BoidTarget*) entity));
                case EntityIds.BoidObstacle: return (object) (*((BoidObstacle*) entity));
                case EntityIds.Item: return (object) (*((Item*) entity));
                case EntityIds.Camp: return (object) (*((Camp*) entity));
                case EntityIds.Player: return (object) (*((Player*) entity));
                case EntityIds.Enemy: return (object) (*((Enemy*) entity));
                case EntityIds.Bullet: return (object) (*((Bullet*) entity));
                case EntityIds.Spawner: return (object) (*((Spawner*) entity));
 
            }

            return null;
        }
    }
                                                                                
#endif                                                                                           
}                                                                                               