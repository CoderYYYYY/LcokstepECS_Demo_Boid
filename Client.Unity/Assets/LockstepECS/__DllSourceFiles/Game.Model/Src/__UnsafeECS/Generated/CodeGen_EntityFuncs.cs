
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by Tools.MacroExpansion, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepEngine                                          
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using Lockstep.Serialization;                                                                    
using System.Runtime.InteropServices;                                                            
using System.Runtime.CompilerServices;                                                            
using System;                                                                                    
using Lockstep.InternalUnsafeECS;                                                               
using System.Collections;                                                                        
using Lockstep.Math;                                                                             
using System.Collections.Generic;                                                                
using Lockstep.Logging;                                                                          
using Lockstep.Util;                                                                          
namespace Lockstep.UnsafeECS.Game {  
    public unsafe partial struct BoidSpawner :IEntity {
        public bool HasComponent(EComponentType compType){
            return EntityUtil._BoidSpawnerComponentSet[(int)compType];
        }
    }
    public unsafe partial struct BoidCell :IEntity {
        public bool HasComponent(EComponentType compType){
            return EntityUtil._BoidCellComponentSet[(int)compType];
        }
    }
    public unsafe partial struct Boid :IEntity {
        public bool HasComponent(EComponentType compType){
            return EntityUtil._BoidComponentSet[(int)compType];
        }
    }
    public unsafe partial struct BoidTarget :IEntity {
        public bool HasComponent(EComponentType compType){
            return EntityUtil._BoidTargetComponentSet[(int)compType];
        }
    }
    public unsafe partial struct BoidObstacle :IEntity {
        public bool HasComponent(EComponentType compType){
            return EntityUtil._BoidObstacleComponentSet[(int)compType];
        }
    } 

    public static unsafe partial class EntityUtil {
        public static Animator* GetAnimator(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.Animator)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
   
            }
            return null;
        }
        public static CollisionAgent* GetCollisionAgent(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.CollisionAgent)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
   
            }
            return null;
        }
        public static NavMeshAgent* GetNavMeshAgent(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.NavMeshAgent)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
   
            }
            return null;
        }
        public static Prefab* GetPrefab(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.Prefab)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.BoidSpawner: return &(((BoidSpawner* )(ptr))->Prefab); 
 
                case EntityIds.Boid: return &(((Boid* )(ptr))->Prefab); 
                case EntityIds.BoidTarget: return &(((BoidTarget* )(ptr))->Prefab); 
                case EntityIds.BoidObstacle: return &(((BoidObstacle* )(ptr))->Prefab);   
            }
            return null;
        }
        public static Transform2D* GetTransform2D(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.Transform2D)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
   
            }
            return null;
        }
        public static Transform3D* GetTransform3D(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.Transform3D)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.BoidSpawner: return &(((BoidSpawner* )(ptr))->Transform); 
 
                case EntityIds.Boid: return &(((Boid* )(ptr))->Transform); 
                case EntityIds.BoidTarget: return &(((BoidTarget* )(ptr))->Transform); 
                case EntityIds.BoidObstacle: return &(((BoidObstacle* )(ptr))->Transform);   
            }
            return null;
        }
        public static BoidSpawnerTag* GetBoidSpawnerTag(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.BoidSpawnerTag)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.BoidSpawner: return &(((BoidSpawner* )(ptr))->Tag); 
 
 
 
   
            }
            return null;
        }
        public static BoidTag* GetBoidTag(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.BoidTag)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
                case EntityIds.Boid: return &(((Boid* )(ptr))->Tag); 
 
   
            }
            return null;
        }
        public static BoidObstacleTag* GetBoidObstacleTag(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.BoidObstacleTag)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
                case EntityIds.BoidObstacle: return &(((BoidObstacle* )(ptr))->Tag);   
            }
            return null;
        }
        public static BoidTargetTag* GetBoidTargetTag(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.BoidTargetTag)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
                case EntityIds.BoidTarget: return &(((BoidTarget* )(ptr))->Tag); 
   
            }
            return null;
        }
        public static TargetMoveInfo* GetTargetMoveInfo(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.TargetMoveInfo)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
                case EntityIds.BoidTarget: return &(((BoidTarget* )(ptr))->MoveInfo); 
   
            }
            return null;
        }
        public static BoidState* GetBoidState(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.BoidState)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
                case EntityIds.Boid: return &(((Boid* )(ptr))->State); 
 
   
            }
            return null;
        }
        public static ViewData* GetViewData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.ViewData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
   
            }
            return null;
        }
        public static SpawnData* GetSpawnData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.SpawnData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.BoidSpawner: return &(((BoidSpawner* )(ptr))->Spawn); 
 
 
 
   
            }
            return null;
        }
        public static AssetData* GetAssetData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.AssetData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.BoidSpawner: return &(((BoidSpawner* )(ptr))->BoidPrefab); 
 
 
 
   
            }
            return null;
        }
        public static CellIndexData* GetCellIndexData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.CellIndexData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
   
            }
            return null;
        }
        public static ScaleData* GetScaleData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.ScaleData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
   
            }
            return null;
        }
        public static PlayerData* GetPlayerData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.PlayerData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
                case EntityIds.BoidObstacle: return &(((BoidObstacle* )(ptr))->Player);   
            }
            return null;
        }
        public static SkillData* GetSkillData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.SkillData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
                case EntityIds.BoidObstacle: return &(((BoidObstacle* )(ptr))->Skill);   
            }
            return null;
        }
        public static MoveData* GetMoveData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.MoveData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
 
 
                case EntityIds.BoidObstacle: return &(((BoidObstacle* )(ptr))->Move);   
            }
            return null;
        }
        public static CellData* GetCellData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.CellData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
                case EntityIds.BoidCell: return &(((BoidCell* )(ptr))->Cell); 
 
 
   
            }
            return null;
        } 


        public static bool HasComponent(Entity* ptr, EComponentType compType){
            var set = _allComponentSet[ptr->_ref._type];
            if(set != null){
                return set[(int)compType];
            }
            return false;
        }

        public static bool[] _BoidSpawnerComponentSet = new bool[]{ 
                false,//None
                false,//Animator
                false,//CollisionAgent
                false,//NavMeshAgent
                true,//Prefab
                false,//Transform2D
                true,//Transform3D
                true,//BoidSpawnerTag
                false,//BoidTag
                false,//BoidObstacleTag
                false,//BoidTargetTag
                false,//TargetMoveInfo
                false,//BoidState
                false,//ViewData
                true,//SpawnData
                true,//AssetData
                false,//CellIndexData
                false,//ScaleData
                false,//PlayerData
                false,//SkillData
                false,//MoveData
                false,//CellData
                false
        };
        public static bool[] _BoidCellComponentSet = new bool[]{ 
                false,//None
                false,//Animator
                false,//CollisionAgent
                false,//NavMeshAgent
                false,//Prefab
                false,//Transform2D
                false,//Transform3D
                false,//BoidSpawnerTag
                false,//BoidTag
                false,//BoidObstacleTag
                false,//BoidTargetTag
                false,//TargetMoveInfo
                false,//BoidState
                false,//ViewData
                false,//SpawnData
                false,//AssetData
                false,//CellIndexData
                false,//ScaleData
                false,//PlayerData
                false,//SkillData
                false,//MoveData
                true,//CellData
                false
        };
        public static bool[] _BoidComponentSet = new bool[]{ 
                false,//None
                false,//Animator
                false,//CollisionAgent
                false,//NavMeshAgent
                true,//Prefab
                false,//Transform2D
                true,//Transform3D
                false,//BoidSpawnerTag
                true,//BoidTag
                false,//BoidObstacleTag
                false,//BoidTargetTag
                false,//TargetMoveInfo
                true,//BoidState
                false,//ViewData
                false,//SpawnData
                false,//AssetData
                false,//CellIndexData
                false,//ScaleData
                false,//PlayerData
                false,//SkillData
                false,//MoveData
                false,//CellData
                false
        };
        public static bool[] _BoidTargetComponentSet = new bool[]{ 
                false,//None
                false,//Animator
                false,//CollisionAgent
                false,//NavMeshAgent
                true,//Prefab
                false,//Transform2D
                true,//Transform3D
                false,//BoidSpawnerTag
                false,//BoidTag
                false,//BoidObstacleTag
                true,//BoidTargetTag
                true,//TargetMoveInfo
                false,//BoidState
                false,//ViewData
                false,//SpawnData
                false,//AssetData
                false,//CellIndexData
                false,//ScaleData
                false,//PlayerData
                false,//SkillData
                false,//MoveData
                false,//CellData
                false
        };
        public static bool[] _BoidObstacleComponentSet = new bool[]{ 
                false,//None
                false,//Animator
                false,//CollisionAgent
                false,//NavMeshAgent
                true,//Prefab
                false,//Transform2D
                true,//Transform3D
                false,//BoidSpawnerTag
                false,//BoidTag
                true,//BoidObstacleTag
                false,//BoidTargetTag
                false,//TargetMoveInfo
                false,//BoidState
                false,//ViewData
                false,//SpawnData
                false,//AssetData
                false,//CellIndexData
                false,//ScaleData
                true,//PlayerData
                true,//SkillData
                true,//MoveData
                false,//CellData
                false
        };  
        
        private static bool[][] _allComponentSet = new bool[][]{
            null,
            EntityUtil._BoidSpawnerComponentSet,
            EntityUtil._BoidCellComponentSet,
            EntityUtil._BoidComponentSet,
            EntityUtil._BoidTargetComponentSet,
            EntityUtil._BoidObstacleComponentSet,  
            null,
        };
    }
}
                                                                                
                                                                                         